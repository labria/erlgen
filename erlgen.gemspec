# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{erlgen}
  s.version = "0.0.2"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Dimitri Krassovski"]
  s.date = %q{2010-04-01}
  s.default_executable = %q{erlgen}
  s.description = %q{Erlang application generator}
  s.email = %q{labria@startika.com}
  s.executables = ["erlgen"]
  s.extra_rdoc_files = [
    "LICENSE",
     "README.rdoc"
  ]
  s.files = [
    ".document",
     ".gitignore",
     "LICENSE",
     "README.rdoc",
     "Rakefile",
     "VERSION",
     "bin/erlgen",
     "erlgen.gemspec",
     "lib/erlgen.rb",
     "lib/erlgen/generator.rb",
     "lib/erlgen/templates/Rakefile",
     "lib/erlgen/templates/application.app",
     "lib/erlgen/templates/application.erl",
     "lib/erlgen/templates/application_sup.erl",
     "lib/erlgen/templates/gen_event.erl",
     "lib/erlgen/templates/gen_fsm.erl",
     "lib/erlgen/templates/gen_server.erl",
     "spec/erlgen_spec.rb",
     "spec/spec.opts",
     "spec/spec_helper.rb"
  ]
  s.homepage = %q{http://github.com/labria/erlgen}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubygems_version = %q{1.3.6}
  s.summary = %q{Erlang application generator}
  s.test_files = [
    "spec/erlgen_spec.rb",
     "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_runtime_dependency(%q<git>, [">= 1.2.5"])
      s.add_development_dependency(%q<rspec>, [">= 1.2.9"])
    else
      s.add_dependency(%q<git>, [">= 1.2.5"])
      s.add_dependency(%q<rspec>, [">= 1.2.9"])
    end
  else
    s.add_dependency(%q<git>, [">= 1.2.5"])
    s.add_dependency(%q<rspec>, [">= 1.2.9"])
  end
end

